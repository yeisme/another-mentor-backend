// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1

package types

type BaseResponse struct {
	Code int    `json:"code"`
	Msg  string `json:"msg"`
}

type ChangePasswordRequest struct {
	OldPassword string `json:"oldPassword" validate:"required"`
	NewPassword string `json:"newPassword" validate:"required,min=6,max=20"`
}

type ChangePasswordResponse struct {
	BaseResponse
}

type GetUserInfoRequest struct {
	UserId int64 `form:"userId,optional"` // 为空时返回当前登录用户信息
}

type GetUserInfoResponse struct {
	BaseResponse
	User User `json:"user,optional"`
}

type LoginRequest struct {
	Account  string `json:"account" validate:"required"` // 用户名或邮箱
	Password string `json:"password" validate:"required"`
}

type LoginResponse struct {
	BaseResponse
	Token     string `json:"token,optional"`
	ExpiresIn int64  `json:"expiresIn,optional"`
	User      User   `json:"user,optional"`
}

type RegisterRequest struct {
	Username string `json:"username" validate:"required,min=5,max=20"`
	Password string `json:"password" validate:"required,min=6,max=20"`
	Email    string `json:"email" validate:"required,email"`
	Code     string `json:"code" validate:"required"`
}

type RegisterResponse struct {
	BaseResponse
	UserId int64 `json:"userId,optional"`
}

type ResetPasswordRequest struct {
	Email    string `json:"email" validate:"required,email"`
	Code     string `json:"code" validate:"required"`
	Password string `json:"password" validate:"required,min=6,max=20"`
}

type ResetPasswordResponse struct {
	BaseResponse
}

type SendVerifyCodeRequest struct {
	Email string `json:"email" validate:"required,email"`
	Type  string `json:"type" validate:"required,oneof=register reset"`
}

type SendVerifyCodeResponse struct {
	BaseResponse
}

type UpdateUserInfoRequest struct {
	Nickname     string `json:"nickname,optional"`
	Avatar       string `json:"avatar,optional"`
	Introduction string `json:"introduction,optional"`
	Phone        string `json:"phone,optional"`
}

type UpdateUserInfoResponse struct {
	BaseResponse
}

type User struct {
	Id           int64  `json:"id"`
	Username     string `json:"username"`
	Email        string `json:"email"`
	Phone        string `json:"phone,optional"`
	Avatar       string `json:"avatar,optional"`
	Nickname     string `json:"nickname,optional"`
	Introduction string `json:"introduction,optional"`
	CreateTime   int64  `json:"createTime"`
	UpdateTime   int64  `json:"updateTime"`
	Status       int    `json:"status"`
}

type UserListRequest struct {
	Page     int    `form:"page,default=1"`
	PageSize int    `form:"pageSize,default=20"`
	Keyword  string `form:"keyword,optional"`
	Status   int    `form:"status,optional"`
}

type UserListResponse struct {
	BaseResponse
	Total int64  `json:"total"`
	List  []User `json:"list"`
}
