name: User Module Workflow

on:
  push:
    paths:
      - "user/**" # 只在user目录有变更时触发
  pull_request:
    paths:
      - "user/**" # 只在user目录有变更时触发
  release:
    types:
      - published  # 当发布新的 release 时触发
  workflow_dispatch:
    inputs:
      custom_tag:
        description: '自定义镜像标签 (留空则使用默认)'
        required: false
        default: 'manual'
      skip_push:
        description: '跳过推送镜像'
        required: false
        default: 'false'

jobs:
  build-user-module:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.24" # 使用合适的Go版本

      - name: Build user module
        run: |
          cd user
          go mod tidy
          go build -v ./main.go

  build-and-push-image:
    needs: build-user-module
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' || github.event_name == 'workflow_dispatch' && github.event.inputs.skip_push != 'true' }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine tag
        id: determine_tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.custom_tag }}" != "manual" ]; then
            echo "TAG=${{ github.event.inputs.custom_tag }}" >> $GITHUB_OUTPUT
          else
            echo "TAG=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/another-mentor-user:latest
            ghcr.io/${{ github.repository_owner }}/another-mentor-user:${{ steps.determine_tag.outputs.TAG }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/another-mentor-user:${{ steps.determine_tag.outputs.TAG }}
          format: 'table,sarif,json'
          exit-code: 0
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          severity-threshold: 'CRITICAL'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
            sarif_file: 'trivy-results.sarif'

      - name: Archive vulnerability scan results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: trivy-scan-results
          path: |
            trivy-results.table
            trivy-results.json
          retention-days: 30
