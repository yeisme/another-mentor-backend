version: "3"

x-markdown-configs: &pg-config-env
  POSTGRES_PORT: ${POSTGRES_PORT:-5432}
  POSTGRES_USER: ${POSTGRES_USER:-postgres}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
  POSTGRES_DB: ${POSTGRES_DB:-markdown}
  TZ: Asia/Shanghai

services:
  markdown:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8090:8080"
      - "8091:9090"
    depends_on:
      markdown-postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      <<: *pg-config-env
    networks:
      - another-mentor-network
    volumes:
      - ./logs:/app/logs
      - ./etc:/app/etc
    command: ["./markdown", "-f", "etc/markdown.docker.yaml"]
    restart: always

  markdown-postgres:
    image: postgres:17-alpine
    environment:
      <<: *pg-config-env
    volumes:
      - markdown_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - another-mentor-network
    restart: always
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2025-03-12T18-04-18Z
    container_name: minio
    ports:
      - "9000:9000" # API 端点
      - "9001:9001" # Console 端点
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_REGION: "ap-east-1"
      MINIO_PROMETHEUS_AUTH_TYPE: "public"
      # MINIO_PROMETHEUS_URL: "http://prometheus:9090"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001" --address ":9000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - another-mentor-network

volumes:
  minio_data:
  markdown_data:

networks:
  another-mentor-network:
    external: true
